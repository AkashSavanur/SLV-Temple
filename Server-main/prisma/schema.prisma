// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// schema.prisma

model Users {
  id            String    @id 
  first_name    String
  last_name     String
  DOB           DateTime?
  email         String?
  phone_number  String    @unique 
  nakshatra     String?
  rashi         String?
  gothra        String?
  roles         Json?    
  address       Json?
  created_at    DateTime? @default(now())
  updated_at    DateTime? @updatedAt
  deleted_at    DateTime?
  AdoptADay     AdoptADay[]    
  Donations     Donations[]
  Relationship  Relationship[]
}

model Relationship {
  id            String       @id 
  user          Users        @relation(fields: [user_id], references: [id])
  user_id       String
  relation      String
  details       Json
  created_at    DateTime?    @default(now())
  updated_at    DateTime?    @updatedAt
  deleted_at    DateTime?
  AdoptADay     AdoptADay[]
}

model Donations {
  id              String    @id
  user            Users     @relation(fields: [user_id], references: [id])
  user_id         String     
  comments        String
  amount          Int
  status          String    
  recipient_name  String
  purpose         Purposes  @relation(fields: [purpose_id], references: [id])
  purpose_id      String
  transaction     Json?
  created_at      DateTime? @default(now())
  updated_at      DateTime? @updatedAt
  deleted_at      DateTime?    
}

model AdoptADay {
  id              String          @id @default(cuid())
  user            Users           @relation(fields: [user_id], references: [id])
  user_id         String    
  date            DateTime  
  occasion        String    
  booking_status  String    
  transaction     Json?     
  recipient_name  String
  rate            Rates           @relation(fields: [rate_id], references: [id])
  rate_id         String   
  relationship    Relationship?   @relation(fields: [relationship_id], references: [id])
  relationship_id String?
  created_at      DateTime?       @default(now())
  updated_at      DateTime?       @updatedAt
  deleted_at      DateTime?       
  isDeleted       Boolean         @default(false)

  @@unique([date, isDeleted])
}



model Rates {
  id                String    @id  
  effectiveDate     DateTime
  priestsHonorarium Int
  annualExpenses    Int
  maintenance       Int
  endowment         Int
  miscellaneous     Int
  created_at        DateTime? @default(now())
  updated_at        DateTime? @updatedAt
  deleted_at        DateTime?
  AdoptADay         AdoptADay[]
}

model Purposes {
  id            String      @id
  name          String
  description   String?
  created_at    DateTime?   @default(now())
  updated_at    DateTime?   @updatedAt
  deleted_at    DateTime?
  Donations     Donations[]
}

model OTP {
  id            String    @id
  phone_number  String
  OTP           Int
  createdAt     DateTime  @default(now())
  expiresAt     DateTime
  updated_at    DateTime? @updatedAt
  deleted_at    DateTime?
}

model Utils {
  id                          String @id
  reciept_number_donation     String
  reciept_number_adopt_a_day  String
}
